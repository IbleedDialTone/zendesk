<div class="container-fluid container-fluid-max-xl main-content">
	<div class="d-none justify-content-sm-center row watcher-message">
		<h1 class="col-sm-6">
			{{dc 'we_are_sorry_but_you_do_not_have_access_to_submit_a_support_ticket'}}
		</h1>
	</div>

	<div class="d-none">
		<div class="row">
			<div class="col-sm-12">
				{{breadcrumbs}}
			</div>
		</div>

		<div class="justify-content-sm-center row">
			<div class="col-sm-6">
				<h1>
					{{t 'submit_a_request'}}
				</h1>

				<div class="request-form">
					{{request_form}}
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	$(function() {
		const componentInputField = document.getElementById('request_custom_fields_360011314571');
		const productInputField = document.getElementById('request_custom_fields_360006041192');

		const currentOrgId = document.querySelector('[aria-describedby="request_organization_id_hint"]');

		const productComponentsMapping = [
			{
				product: 'liferay_commerce',
				components: [
					'activation_key_project_administration',
					'apis_integrations_and_extension_points',
					'commerce_insights',
					'configuration_and_settings',
					'connectors',
					'digital_merchandise_management',
					'digital_store_management',
					'shopping_experience'
				]
			},
			{
				product: 'liferay_dxp',
				components: [
					'activation_key_project_administration',
					'apio_architect',
					'application_display_templates',
					'audience_targeting',
					'authentication',
					'caching_clustering',
					'calendar',
					'collaboration_suite',
					'deployment_environments',
					'document_management',
					'dynamic_data_mapping_data_lists',
					'forms',
					'liferay_api',
					'localization',
					'performance',
					'portal_configuration',
					'recycle_bin',
					'reporting',
					'search_indexing',
					'search_engine_optimization_analytics',
					'security',
					'site_management',
					'social_networking',
					'staging_export_import',
					'ui_infrastructure_accessibility',
					'upgrade',
					'user_membership_role_management',
					'web_content',
					'workflow_workflow_forms'
				]
			},
			{
				product: 'liferay_dxp_cloud',
				components: [
					'backup_recovery',
					'connectivity',
					'networking',
					'system_availability',
					'vpn'
				]
			},
			{
				product: 'liferay_portal',
				components: [
					'activation_key_project_administration',
					'authentication',
					'caching_clustering',
					'calendar',
					'collaboration_suite',
					'deployment_environments',
					'portal_developer_tools',
					'document_management',
					'liferay_api',
					'liferay_sync',
					'localization',
					'patch_management',
					'search_indexing',
					'security',
					'staging_export_import',
					'ui_infrastructure_accessibility',
					'upgrade',
					'user_membership_role_management',
					'web_content',
					'workflow_workflow_forms'
				]
			}
		];

		/** When a user doesn't belong to any organization */
		var currentOrgTags = '';

		/** When a user belongs to only one organization */
		if (HelpCenter.user.organizations.length) {
			var currentOrgTags = HelpCenter.user.organizations[0].tags;
		}

		function mapInputValuesFromField(field) {
			const dataset = JSON.parse(field.dataset.tagger);

			const inputValues = dataset.map(
				function(input) {
					var val = input.value;

					if (val === undefined) {
						val = input.label.toLowerCase().replace(' ', '_');
					}

					return val;
				}
			);

			inputValues.shift();

			return inputValues;
		};

		function matchProductComponents(product) {
			var productMatch = productComponentsMapping.filter(
				function(value) {
					return product.match(value.product);
				}
			);

			/** Match again if more than one match was found */
			if (productMatch.length > 1) {
				productMatch = productMatch.filter(
					function(value) {
						return value.product.match(product);
					}
				);
			}

			return productMatch[0];
		};

		function matchValueToTags(value, tags) {
			return tags.some(
				function(tag) {
					return (value === tag);
				}
			);
		};

		$('.nesty-panel').on(
			'DOMNodeInserted',
			function() {
				const currentTarget = $(this);

				/** When a user belongs to multiple organizations */
				if (currentOrgId) {
					const currentOrg = HelpCenter.user.organizations.filter(
						function(org) {
							return org.name === currentOrgId.text;
						}
					)[0];

					currentOrgTags = currentOrg.tags;
				}

				const productInputValues = mapInputValuesFromField(productInputField);

				const removeProductDropdowns = productInputValues.filter(
					function(value) {
						return !matchValueToTags(value, currentOrgTags);
					}
				);

				removeProductDropdowns.forEach(
					function(dropdown) {
						currentTarget.children('ul').children().remove('#' + dropdown);
					}
				);

				const currentProduct = productInputField.value;

				if (currentProduct) {
					const match = matchProductComponents(currentProduct);

					if (match) {
						const componentOptions = match.components;

						const componentInputValues = mapInputValuesFromField(componentInputField);

						const removeComponentDropdowns = componentInputValues.filter(
							function(value) {
								return !matchValueToTags(value, componentOptions);
							}
						);

						removeComponentDropdowns.forEach(
							function(dropdown) {
								currentTarget.children('ul').children().remove('#' + dropdown);
							}
						);
					}
				}
			}
		);
	});
</script>